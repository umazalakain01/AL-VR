apply plugin: 'com.android.application'
apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

android {
    buildToolsVersion = '30.0.1'
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.polygraphene.alvr"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 40
        versionName "14.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags String.format("-std=c++17 -fexceptions -frtti -DALVR_CLIENT_VERSION=\\\"%s\\\"", versionName)
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.debug
            ndk {
                abiFilters "arm64-v8a"
            }
        }
        debug {
            jniDebuggable = true
            ndk {
                abiFilters "arm64-v8a"
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ["src/main/jniLibs"]
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    flavorDimensions "headset", "package"
    productFlavors {
        OculusQuest {
            dimension "headset"
        }
        OculusGo {
            dimension "headset"
        }
        Stable {
            dimension "package"
            applicationId "com.polygraphene.alvr"
        }
        Nightly {
            dimension "package"
            applicationId "com.alvr.client.nightly"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.so'])
   // api 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.koushikdutta.async:androidasync:2.2.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    testImplementation 'junit:junit:4.12'
}

build.dependsOn(':extractNdk')

cargo {
    module  = "../.."
    libname = "alvr_client"
    targets = ["arm64"]
    targetDirectory = "../../../../target"
    verbose = true
    features {
        defaultAnd("build-cpp")
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith('javaPreCompile')) {
        task.dependsOn 'cargoBuild'
    }
}
